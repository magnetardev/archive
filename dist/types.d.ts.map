{"mappings":";AAEA;IACI,GAAG,EAAE,MAAO,CAAC;IAEb,WAAW,CAAC,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC;IACjE,eAAe,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAC;IACrC,0BAA0B,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAC;IAChD,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,GAAG,MAAM,CAAC;IAC5D,cAAc,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAC;IACpC,SAAS,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAC;IAG/B,cAAc,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAC;IACpC,cAAc,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAC;IACpC,UAAU,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAC;IAChC,kBAAkB,CAAC,GAAG,EAAE,MAAM,GAAG,MAAM,CAAC;IAExC,YAAY,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC;IACvD,WAAW,CAAC,OAAO,EAAE,MAAM,GAAG,IAAI,CAAC;IACnC,WAAW,CACP,OAAO,EAAE,MAAM,EACf,QAAQ,EAAE,MAAM,EAChB,QAAQ,EAAE,MAAM,EAChB,QAAQ,EAAE,MAAM,EAChB,GAAG,EAAE,MAAM,EACX,QAAQ,EAAE,MAAM,GACjB,IAAI,CAAC;CACX;AC5BD;IACI,KAAK,QAAW;IAChB,IAAI,QAAW;IACf,OAAO,QAAW;IAClB,MAAM,QAAW;IACjB,eAAe,OAAW;IAC1B,WAAW,QAAW;IACtB,SAAS,QAAW;IACpB,SAAS,OAAW;CACvB;ACND;IAKe,GAAG,EAAE,aAAa;gBAAlB,GAAG,EAAE,aAAa,EACzB,GAAG,EAAE,UAAU,EACf,QAAQ,GAAE,MAAM,GAAG,IAAW;IAYlC,IAAI,mBAAmB,YAMtB;IAED,KAAK;IAgBJ,OAAO;IASR,CAAC,MAAM,CAAC,QAAQ,CAAC;CAGpB;AAED;gBAIgB,MAAM,CAAC,EAAE,aAAa,EACtB,GAAG,CAAC,EAAE,MAAM,EACZ,OAAO,CAAC,EAAE,MAAM;IAG5B,IAAI,QAAQ,IAAI,MAAM,CAKrB;IAED,IAAI,IAAI,IAAI,MAAM,CAGjB;IAED,IAAI,IAAI,IAAI,MAAM,CAIjB;IAED,IAAI,SAAS,IAAI,OAAO,CAIvB;IAED,IAAI;IAMJ,OAAO,IAAI,UAAU,GAAG,SAAS;CA0BpC;AE1HD,QAAO,MAAM;;;;;;;;;;;;;;;;;;;;;CAqBZ,CAAC;AAEF,0BAAiC,MAAM,4BAA4B,CAAC;AAGpE;gBAIwB,GAAG,EAAE,aAAa,EAAE,IAAI,EAAE,kBAAkB;IAMhE,GAAG,CACC,IAAI,EAAE,MAAM,EACZ,MAAM,EAAE,UAAU,EAClB,IAAI,GAAE,QAAwB,EAC9B,IAAI,SAAQ;IAQhB,KAAK,IAAI,UAAU,GAAG,SAAS;CAOlC;ACpDD;IACI,0BAA0B;IAC1B,UAAU,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC;CACpD;AAKD,8EAA8E;AAC9E,6BAAmC,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC,EAAE;IAAE,QAAQ,CAAC,EAAE,MAAM,CAAA;CAAE,GAAG,aAAa,0BAGvG;AAED,0EAA0E;AAC1E,6BAAmC,IAAI,GAAE,kBAA0B,EAAE,OAAO,CAAC,EAAE,aAAa,0BAG3F","sources":["src/src/loader.ts","src/src/util/file_types.ts","src/src/reader.ts","src/src/util/perms.ts","src/src/writer.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,null,null,null,"import loader, { WasmInterface } from \"./loader\";\nimport { ArchiveReader } from \"./reader\";\nimport * as fileTypes from \"./util/file_types\";\nimport * as perms from \"./util/perms\";\nimport { ArchiveWriteFormat, ArchiveWriter } from \"./writer\";\n\nexport interface LoaderOptions {\n    /** TODO: Document this */\n    locateFile(path: string, prefix: string): string;\n}\n\n/** A cache of sorts for the create fucntions. */\nlet mod: WasmInterface;\n\n/** Creates a reader, which lets you read all the files of an archive file. */\nexport async function createReader(archive: ArrayBuffer, options?: { password?: string } & LoaderOptions) {\n    if (!mod) mod = await loader({ locateFile: options?.locateFile });\n    return new ArchiveReader(mod, new Uint8Array(archive), options?.password);\n}\n\n/** Creates a writer, which allows you to build and export an archive.  */\nexport async function createWriter(type: ArchiveWriteFormat = \"zip\", options?: LoaderOptions) {\n    if (!mod) mod = await loader(options);\n    return new ArchiveWriter(mod, type);\n}\n\nexport { fileTypes, perms };\n"],"names":[],"version":3,"file":"types.d.ts.map"}